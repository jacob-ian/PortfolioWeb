rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read, write: if false;
    }

    match /users/{userId}/images/{filePath} {
      allow read;
      allow create: if isOwner(userId, request.auth.uid) || hasAdminRole(request.auth);
      allow update: if isOwner(userId, request.auth.uid) || hasAdminRole(request.auth);
      allow delete: if isOwner(userId, request.auth.uid) || hasAdminRole(request.auth);
    }

    match /posts/{postId}/images/{fileName} {
      allow read;
      allow create: if hasAuthorRole(request.auth) || hasAdminRole(request.auth);
      allow update: if hasAuthorRole(request.auth) || hasAdminRole(request.auth);
      allow delete: if hasAuthorRole(request.auth) || hasAdminRole(request.auth);
    }

    function isOwner(userId, uid) {
      return userId == uid;
    }

    function hasAuthorRole(auth){
      return auth.token.author
    }

    function hasAdminRole(auth){
      return auth.token.admin
    }
  }
}
